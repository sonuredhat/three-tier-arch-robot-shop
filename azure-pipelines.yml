# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  paths:
    include:
      - web/**
      - rating/**
      - payment/**
      - shipping/** 
      - mysql/** 
      - mongo/** 
    exclude:
      - README.md

variables:
  dockerHubRepo: sonudock/roboshop
  tag: '$(Build.BuildId)'
  dockerHubUser: sonudock
  dockerHubConnection: DockerHubConnection

pool:
  name: cirunner  # name of your agent pool (must match exactly)


stages:
- stage: DetectChanges
  displayName: Detect Changed Services
  jobs:
    - job: Detect
      displayName: Detect Changed Services
      steps:
        - checkout: self
        - bash: |
            echo "Detecting changed services..."
            CHANGED=$(git diff --name-only HEAD~1 HEAD | cut -d/ -f1 | sort -u | grep -E '^(web|rating|payment|shipping)$' || true)
            echo "Detected: $CHANGED"
            echo "##vso[task.setvariable variable=changedServices;isOutput=true]$CHANGED"
          name: detect

- stage: BuildPush
  displayName: Build and Push Docker Images
  dependsOn: DetectChanges
  variables:
    changedServices: $[ stageDependencies.DetectChanges.Detect.outputs['detect.changedServices'] ]
  jobs:
    - job: noop
      displayName: Dummy job to allow stage
      steps:
        - bash: echo "This is a dummy job. Actual builds depend on changed services."

    - ${{ each svc in variables.services }}:
        - job: BuildAndPush_${{ svc }}
          displayName: Build & Push ${{ svc }}
          condition: contains(variables['changedServices'], '${{ svc }}')
          pool:
            name: self-hosted
          steps:
            - checkout: self

            - task: Docker@2
              displayName: Build image ${{ svc }}
              inputs:
                command: build
                repository: $(dockerHubUser)/${{ svc }}
                Dockerfile: $(Build.SourcesDirectory)/${{ svc }}/Dockerfile
                tags: |
                  $(Build.SourceVersion)
                  latest

            - task: Docker@2
              displayName: Push image ${{ svc }}
              inputs:
                command: push
                repository: $(dockerHubUser)/${{ svc }}
                tags: |
                  $(Build.SourceVersion)
                  latest
                containerRegistry: $(dockerHubConnection)